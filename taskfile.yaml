# yaml-language-server: $schema=https://taskfile.dev/schema.json
# cspell:ignore taskfile,vcpkg,msbuild,makefiles,deinit

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  default:
    cmds:
      - task: build

  premake:
    status:
      - premake5 --version
    cmds:
      - cmd: scoop install main/premake
        platforms: [windows]

  build:
    deps: [premake]
    cmds:
      - cmd: premake5 vs2022
        platforms: [windows]
      - cmd: premake gmake2
        platforms: [linux, darwin]
      - task: msbuild
        vars:
          SOLUTION: .build/vs2022/clink.sln

  msbuild:
    aliases: [build, b]
    silent: true
    requires:
      vars: [SOLUTION]
    vars:
      DEFAULT_CONFIG: Release
      DEFAULT_PLATFORM: x64
      MSBUILD:
        sh: | # shell
          strings=("Preview" "Enterprise" "Professional" "Community")
          for str in "${strings[@]}"
          do
            result="C:/Program Files/Microsoft Visual Studio/2022/${str}/MSBuild/Current/Bin/amd64/MSBuild.exe"
            if [ -e "$result" ]; then
              echo "$result"
              break
            fi
          done
      MSBUILD_CONFIG: '{{ .CONFIG | default .DEFAULT_CONFIG }}'
      MSBUILD_SOLUTION: '{{ joinPath .TASKFILE_DIR .SOLUTION }}'
      MSBUILD_PLATFORM: '{{ .PLATFORM | default .DEFAULT_PLATFORM }}'
    cmds:
      - cmd: echo "Building '{{ .MSBUILD_SOLUTION }}' with '{{ .MSBUILD_CONFIG }}' configuration."
      - cmd: >-
          "{{fromSlash .MSBUILD}}"
          /m 
          /t:Build 
          /p:Configuration="{{.MSBUILD_CONFIG}}" 
          /p:Platform="{{.MSBUILD_PLATFORM}}" 
          "{{fromSlash .MSBUILD_SOLUTION}}"
  