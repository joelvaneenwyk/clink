# yaml-language-server: $schema=https://taskfile.dev/schema.json
# cspell:ignore taskfile,vcpkg,msbuild,makefiles,deinit

version: '3'

vars:
  BUILD_DIR: .build
  GENERATOR: vs2022

tasks:
  default:
    cmds:
      - task: build

  premake:
    status:
      - premake5 --version
    cmds:
      - cmd: scoop install main/premake
        platforms: [windows]

  configure:
    aliases: [c, cfg, setup]
    deps: [premake]
    sources:
      - '*.lua'
    generates:
      - '{{.BUILD_DIR}}/{{.GENERATOR}}/*.sln'
      - '{{.BUILD_DIR}}/{{.GENERATOR}}/*.vcxproj'
    cmds:
      - cmd: premake5 {{.GENERATOR}}
        platforms: [windows]

  build:
    aliases: [b, bld]
    deps: [configure]
    sources:
      - '{{.BUILD_DIR}}/{{.GENERATOR}}/*.sln'
      - '{{.BUILD_DIR}}/{{.GENERATOR}}/*.vcxproj'
      - '**/*.{c,cpp,h,hpp}'
    generates:
      - '{{.BUILD_DIR}}/{{.GENERATOR}}/bin/release/clink_x64.exe'
    cmds:
      - task: msbuild
        vars:
          SOLUTION: '{{.BUILD_DIR}}/{{.GENERATOR}}/clink.sln'
          CONFIG: Release

  lua:
    aliases: [l]
    silent: true
    cmds:
      - cmd: lua -v
      - cmd: lua -e "print('Hello, Lua!')"

  wildmatch:
    cmds:
      - cmd: make -C "{{ joinPath .TASKFILE_DIR "wildmatch" }}"

  readline:
    cmds:
      - cmd: make -C "{{ joinPath .TASKFILE_DIR "readline" "readline" }}"

  msbuild:
    aliases: [build, b]
    silent: true
    requires:
      vars: [SOLUTION]
    vars:
      DEFAULT_CONFIG: Release
      DEFAULT_PLATFORM: x64
      MSBUILD:
        sh: | # shell
          strings=("Preview" "Enterprise" "Professional" "Community")
          for str in "${strings[@]}"
          do
            result="C:/Program Files/Microsoft Visual Studio/2022/${str}/MSBuild/Current/Bin/amd64/MSBuild.exe"
            if [ -e "$result" ]; then
              echo "$result"
              break
            fi
          done
      MSBUILD_CONFIG: '{{ .CONFIG | default .DEFAULT_CONFIG }}'
      MSBUILD_SOLUTION: '{{ joinPath .TASKFILE_DIR .SOLUTION }}'
      MSBUILD_PLATFORM: '{{ .PLATFORM | default .DEFAULT_PLATFORM }}'
    cmds:
      - cmd: echo "Building '{{ .MSBUILD_SOLUTION }}' with '{{ .MSBUILD_CONFIG }}' configuration."
      - cmd: >-
          "{{fromSlash .MSBUILD}}"
          /m 
          /t:Build 
          /p:Configuration="{{.MSBUILD_CONFIG}}" 
          /p:Platform="{{.MSBUILD_PLATFORM}}" 
          "{{fromSlash .MSBUILD_SOLUTION}}"
  